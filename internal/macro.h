#pragma once

#define MIHATSU_CONCAT(a, b) _MIHATSU_PRIMITIVE_CONCAT(a, b)
#define _MIHATSU_PRIMITIVE_CONCAT(a, b) a##b

#define MIHATSU_NARGS(...) _MIHATSU_SELECT_11TH(__VA_ARGS__, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
#define _MIHATSU_SELECT_11TH(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, ...) _11

#define MIHATSU_NARGS_SELECTOR(prefix, ...) MIHATSU_CONCAT(prefix, MIHATSU_NARGS(__VA_ARGS__))(__VA_ARGS__)

#define MIHATSU_IS_BRACKETED(token) MIHATSU_NARGS_SELECTOR(_MIHATSU_IS_BRACKETED_IMPL, _MIHATSU_0_COMMA_0 token)
#define _MIHATSU_0_COMMA_0(...) 0, 0
#define _MIHATSU_IS_BRACKETED_IMPL1(...) 0
#define _MIHATSU_IS_BRACKETED_IMPL2(...) 1

#define MIHATSU_CONDITIONAL(cond, case_1, case_0) MIHATSU_CONCAT(_MIHATSU_CONDITIONAL_IMPL, cond)(case_1, case_0)
#define _MIHATSU_CONDITIONAL_IMPL1(case_1, case_0) case_1
#define _MIHATSU_CONDITIONAL_IMPL0(case_1, case_0) case_0
